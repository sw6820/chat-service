name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Cache node modules
        uses: actions/cache@v3
        id: cache
        with:
          path: node_modules
          key: npm-packages-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Display package.json (Debugging Step)
        run: cat package.json

#      - name: preinstall dependencies
#        run: rm -rf node_modules

      - name: Install dependencies
        run: npm install

      - name: Verify node_modules presence (Debugging Step)
        run: ls -la node_modules

      - name: Prebuild dependencies
        run: npm run prebuild

      - name: Build project
        run: npm run build

      - name: Add public IP to AWS security group
        uses: sw6820/chat-service@main
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          aws-security-group-id: ${{ secrets.AWS_SECURITY_GROUP_ID }}
          port: '22'
          to-port: '22'
          protocol: 'tcp'
          description: 'Allow GitHub Actions SSH Access'

      - name: Deploy to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          ENV_PROD: ${{ secrets.ENV_PROD }}
          APP_NAME: ${{ secrets.APP_NAME }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          echo "$ENV_PROD" > .env.prod
          scp -o StrictHostKeyChecking=no -i private_key.pem -r ./dist $EC2_USER@$EC2_HOST:/home/$EC2_USER/$APP_NAME
          scp -o StrictHostKeyChecking=no -i private_key.pem .env.prod $EC2_USER@$EC2_HOST:/home/$EC2_USER/$APP_NAME/.env.prod
          ssh -o StrictHostKeyChecking=no -i private_key.pem $EC2_USER@$EC2_HOST << 'EOF'
            cd /home/$EC2_USER/$APP_NAME
            npm install --production
            pm2 stop chat-service || true
            pm2 start npm --name "chat-service" -- run start:prod
          EOF
          rm private_key.pem
          rm .env.prod

      - name: Remove public IP from AWS security group
        uses: sw6820/chat-service@main
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          aws-security-group-id: ${{ secrets.AWS_SECURITY_GROUP_ID }}
          port: '22'
          to-port: '22'
          protocol: 'tcp'
